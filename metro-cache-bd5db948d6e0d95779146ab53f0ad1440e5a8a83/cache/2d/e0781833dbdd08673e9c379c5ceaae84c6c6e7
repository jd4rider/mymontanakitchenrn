__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.clock = exports.default = undefined;

  var _AnimatedValue2 = _require(_dependencyMap[0]);

  var _AnimatedValue3 = babelHelpers.interopRequireDefault(_AnimatedValue2);

  var _AnimatedNode2 = _require(_dependencyMap[1]);

  var _AnimatedNode3 = babelHelpers.interopRequireDefault(_AnimatedNode2);

  var _utils = _require(_dependencyMap[2]);

  var AnimatedMainClock = function (_AnimatedValue) {
    babelHelpers.inherits(AnimatedMainClock, _AnimatedValue);

    function AnimatedMainClock() {
      babelHelpers.classCallCheck(this, AnimatedMainClock);

      var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedMainClock.__proto__ || Object.getPrototypeOf(AnimatedMainClock)).call(this, {
        type: 'MAIN_CLOCK'
      }));

      _this._runFrame = function () {
        _this._updateValue(0);

        if (_this.__children.length > 0) {
          _this._frameCallback = requestAnimationFrame(_this._runFrame);
        }
      };

      return _this;
    }

    babelHelpers.createClass(AnimatedMainClock, [{
      key: "__onEvaluate",
      value: function __onEvaluate() {
        return +new Date();
      }
    }, {
      key: "__attach",
      value: function __attach() {
        babelHelpers.get(AnimatedMainClock.prototype.__proto__ || Object.getPrototypeOf(AnimatedMainClock.prototype), "__attach", this).call(this);

        if (!this._frameCallback) {
          this._frameCallback = requestAnimationFrame(this._runFrame);
        }
      }
    }, {
      key: "__detach",
      value: function __detach() {
        if (this._frameCallback) {
          cancelAnimationFrame(this._frameCallback);
          this._frameCallback = null;
        }

        babelHelpers.get(AnimatedMainClock.prototype.__proto__ || Object.getPrototypeOf(AnimatedMainClock.prototype), "__detach", this).call(this);
      }
    }]);
    return AnimatedMainClock;
  }(_AnimatedValue3.default);

  var mainClock = new AnimatedMainClock();

  var AnimatedClock = function (_AnimatedNode) {
    babelHelpers.inherits(AnimatedClock, _AnimatedNode);

    function AnimatedClock() {
      babelHelpers.classCallCheck(this, AnimatedClock);
      return babelHelpers.possibleConstructorReturn(this, (AnimatedClock.__proto__ || Object.getPrototypeOf(AnimatedClock)).call(this, {
        type: 'clock'
      }));
    }

    babelHelpers.createClass(AnimatedClock, [{
      key: "__onEvaluate",
      value: function __onEvaluate() {
        return (0, _utils.val)(mainClock);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        babelHelpers.get(AnimatedClock.prototype.__proto__ || Object.getPrototypeOf(AnimatedClock.prototype), "__attach", this).call(this);

        if (this._started && !this._attached) {
          mainClock.__addChild(this);
        }

        this._attached = true;
      }
    }, {
      key: "__detach",
      value: function __detach() {
        if (this._started && this._attached) {
          mainClock.__removeChild(this);
        }

        this._attached = false;
        babelHelpers.get(AnimatedClock.prototype.__proto__ || Object.getPrototypeOf(AnimatedClock.prototype), "__detach", this).call(this);
      }
    }, {
      key: "start",
      value: function start() {
        if (!this._started && this._attached) {
          mainClock.__addChild(this);
        }

        this._started = true;
      }
    }, {
      key: "stop",
      value: function stop() {
        if (this._started && this._attached) {
          mainClock.__removeChild(this);
        }

        this._started = false;
      }
    }, {
      key: "isStarted",
      value: function isStarted() {
        return this._started;
      }
    }]);
    return AnimatedClock;
  }(_AnimatedNode3.default);

  exports.default = AnimatedClock;
  var clock = mainClock;
  exports.clock = clock;
});