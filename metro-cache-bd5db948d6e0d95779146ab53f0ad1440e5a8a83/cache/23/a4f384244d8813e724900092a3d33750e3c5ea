__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[1]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _lodash = _require(_dependencyMap[3]);

  var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

  var _DummyNavButton = _require(_dependencyMap[4]);

  var _DummyNavButton2 = babelHelpers.interopRequireDefault(_DummyNavButton);

  var _NavButton = _require(_dependencyMap[5]);

  var _NavButton2 = babelHelpers.interopRequireDefault(_NavButton);

  var _Title = _require(_dependencyMap[6]);

  var _Title2 = babelHelpers.interopRequireDefault(_Title);

  var _ViewPropTypes = _require(_dependencyMap[7]);

  var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

  function generateChild(value, type) {
    if (_react2.default.isValidElement(value)) {
      return _react2.default.createElement(
        _reactNative.View,
        {
          key: type
        },
        value
      );
    } else if (typeof value === 'object' && !(0, _lodash2.default)(value)) {
      return type === 'center' ? _react2.default.createElement(_Title2.default, babelHelpers.extends({}, value, {
        key: type
      })) : _react2.default.createElement(_NavButton2.default, babelHelpers.extends({}, value, {
        key: type
      }));
    }

    return type === 'center' ? null : _react2.default.createElement(_DummyNavButton2.default, {
      key: type
    });
  }

  function populateChildren(propChildren) {
    var childrenArray = [];
    var leftComponent = generateChild(propChildren.leftComponent, 'left');
    var centerComponent = generateChild(propChildren.centerComponent, 'center');
    var rightComponent = generateChild(propChildren.rightComponent, 'right');
    childrenArray.push(leftComponent, centerComponent, rightComponent);
    return childrenArray;
  }

  var Header = function Header(props) {
    var children = props.children,
        statusBarProps = props.statusBarProps,
        leftComponent = props.leftComponent,
        centerComponent = props.centerComponent,
        rightComponent = props.rightComponent,
        backgroundColor = props.backgroundColor,
        outerContainerStyles = props.outerContainerStyles,
        innerContainerStyles = props.innerContainerStyles,
        attributes = babelHelpers.objectWithoutProperties(props, ["children", "statusBarProps", "leftComponent", "centerComponent", "rightComponent", "backgroundColor", "outerContainerStyles", "innerContainerStyles"]);
    var propChildren = [];

    if (leftComponent || centerComponent || rightComponent) {
      propChildren = populateChildren({
        leftComponent: leftComponent,
        centerComponent: centerComponent,
        rightComponent: rightComponent
      });
    }

    return _react2.default.createElement(
      _reactNative.View,
      babelHelpers.extends({}, attributes, {
        style: [styles.outerContainer, backgroundColor && {
          backgroundColor: backgroundColor
        }, outerContainerStyles]
      }),
      _react2.default.createElement(_reactNative.StatusBar, statusBarProps),
      _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.innerContainer, innerContainerStyles]
        },
        propChildren.length > 0 ? propChildren : children
      )
    );
  };

  Header.propTypes = {
    leftComponent: _propTypes2.default.object,
    centerComponent: _propTypes2.default.object,
    rightComponent: _propTypes2.default.object,
    backgroundColor: _propTypes2.default.string,
    outerContainerStyles: _ViewPropTypes2.default.style,
    innerContainerStyles: _ViewPropTypes2.default.style,
    children: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.arrayOf(_propTypes2.default.element)]),
    statusBarProps: _propTypes2.default.object
  };

  var styles = _reactNative.StyleSheet.create({
    innerContainer: {
      flex: 1,
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-end'
    },
    outerContainer: {
      backgroundColor: '#476DC5',
      borderBottomColor: '#f2f2f2',
      borderBottomWidth: 1,
      padding: 15,
      height: 70
    }
  });

  exports.default = Header;
});