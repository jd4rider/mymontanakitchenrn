__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _colors;

  var _propTypes = _require(_dependencyMap[0]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _FontAwesome = _require(_dependencyMap[3]);

  var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

  var _Text = _require(_dependencyMap[4]);

  var _Text2 = babelHelpers.interopRequireDefault(_Text);

  var _fonts = _require(_dependencyMap[5]);

  var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

  var _ViewPropTypes = _require(_dependencyMap[6]);

  var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

  var log = function log() {
    console.log('please attach method to this component');
  };

  var colors = (_colors = {}, babelHelpers.defineProperty(_colors, 'github-alt', '#000000'), babelHelpers.defineProperty(_colors, 'google-plus-official', '#dd4b39'), babelHelpers.defineProperty(_colors, 'reddit-alien', '#fc461e'), babelHelpers.defineProperty(_colors, 'stack-overflow', '#f27f33'), babelHelpers.defineProperty(_colors, "angellist", '#1c4082'), babelHelpers.defineProperty(_colors, "codepen", '#000000'), babelHelpers.defineProperty(_colors, "envelope", '#000000'), babelHelpers.defineProperty(_colors, "etsy", '#f2581e'), babelHelpers.defineProperty(_colors, "facebook", '#3b5998'), babelHelpers.defineProperty(_colors, "foursquare", '#0072b1'), babelHelpers.defineProperty(_colors, "github", '#000000'), babelHelpers.defineProperty(_colors, "gitlab", '#e14329'), babelHelpers.defineProperty(_colors, "instagram", '#517fa4'), babelHelpers.defineProperty(_colors, "linkedin", '#007bb6'), babelHelpers.defineProperty(_colors, "medium", '#02b875'), babelHelpers.defineProperty(_colors, "pinterest", '#cb2027'), babelHelpers.defineProperty(_colors, "quora", '#a82400'), babelHelpers.defineProperty(_colors, "soundcloud", '#f50'), babelHelpers.defineProperty(_colors, "steam", '#c6c3c1'), babelHelpers.defineProperty(_colors, "stumbleupon", '#EB4823'), babelHelpers.defineProperty(_colors, "tumblr", '#32506d'), babelHelpers.defineProperty(_colors, "twitch", '#6441A5'), babelHelpers.defineProperty(_colors, "twitter", '#00aced'), babelHelpers.defineProperty(_colors, "vimeo", '#aad450'), babelHelpers.defineProperty(_colors, "wordpress", '#21759b'), babelHelpers.defineProperty(_colors, "youtube", '#bb0000'), _colors);

  var SocialIcon = function SocialIcon(props) {
    var activityIndicatorStyle = props.activityIndicatorStyle,
        button = props.button,
        component = props.component,
        disabled = props.disabled,
        fontFamily = props.fontFamily,
        fontStyle = props.fontStyle,
        fontWeight = props.fontWeight,
        iconColor = props.iconColor,
        iconSize = props.iconSize,
        iconStyle = props.iconStyle,
        light = props.light,
        loading = props.loading,
        onLongPress = props.onLongPress,
        onPress = props.onPress,
        raised = props.raised,
        small = props.small,
        style = props.style,
        title = props.title,
        type = props.type,
        underlayColor = props.underlayColor,
        attributes = babelHelpers.objectWithoutProperties(props, ["activityIndicatorStyle", "button", "component", "disabled", "fontFamily", "fontStyle", "fontWeight", "iconColor", "iconSize", "iconStyle", "light", "loading", "onLongPress", "onPress", "raised", "small", "style", "title", "type", "underlayColor"]);
    var Component = onPress || onLongPress ? component || _reactNative.TouchableHighlight : _reactNative.View;
    var loadingElement = void 0;

    if (loading) {
      loadingElement = _react2.default.createElement(_reactNative.ActivityIndicator, {
        animating: true,
        style: [styles.activityIndicatorStyle, activityIndicatorStyle],
        color: iconColor || 'white',
        size: small && 'small' || 'large'
      });
    }

    return _react2.default.createElement(
      Component,
      babelHelpers.extends({}, attributes, {
        underlayColor: light ? 'white' : underlayColor || colors[type],
        onLongPress: disabled ? null : onLongPress || log,
        onPress: (!disabled || log) && (onPress || log),
        disabled: disabled || false,
        style: [raised && styles.raised, styles.container, button && styles.button, !button && raised && styles.icon, !button && !light && !raised && {
          width: iconSize * 2 + 4,
          height: iconSize * 2 + 4,
          borderRadius: iconSize * 2
        }, {
          backgroundColor: colors[type]
        }, light && {
          backgroundColor: 'white'
        }, style && style]
      }),
      _react2.default.createElement(
        _reactNative.View,
        {
          style: styles.wrapper
        },
        _react2.default.createElement(_FontAwesome2.default, {
          style: [iconStyle && iconStyle],
          color: light ? colors[type] : iconColor,
          name: type,
          size: iconSize
        }),
        button && title && _react2.default.createElement(
          _Text2.default,
          {
            style: [styles.title, light && {
              color: colors[type]
            }, fontFamily && {
              fontFamily: fontFamily
            }, fontWeight && {
              fontWeight: fontWeight
            }, fontStyle && fontStyle]
          },
          title
        ),
        loading && loadingElement
      )
    );
  };

  SocialIcon.propTypes = {
    component: _propTypes2.default.func,
    type: _propTypes2.default.string,
    button: _propTypes2.default.bool,
    onPress: _propTypes2.default.func,
    onLongPress: _propTypes2.default.func,
    iconStyle: _ViewPropTypes2.default.style,
    style: _ViewPropTypes2.default.style,
    iconColor: _propTypes2.default.string,
    underlayColor: _propTypes2.default.string,
    title: _propTypes2.default.string,
    raised: _propTypes2.default.bool,
    disabled: _propTypes2.default.bool,
    loading: _propTypes2.default.bool,
    activityIndicatorStyle: _ViewPropTypes2.default.style,
    small: _propTypes2.default.string,
    iconSize: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    light: _propTypes2.default.bool,
    fontWeight: _propTypes2.default.string,
    fontStyle: _reactNative.Text.propTypes.style,
    fontFamily: _propTypes2.default.string
  };
  SocialIcon.defaultProps = {
    raised: true,
    iconColor: 'white',
    iconSize: 24,
    button: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      margin: 7,
      borderRadius: 30,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    button: {
      paddingTop: 14,
      paddingBottom: 14
    },
    raised: babelHelpers.extends({}, {
      elevation: 2
    }),
    wrapper: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: babelHelpers.extends({
      color: 'white',
      marginLeft: 15
    }, babelHelpers.extends({}, _fonts2.default.android.black)),
    icon: {
      height: 52,
      width: 52
    },
    activityIndicatorStyle: {
      marginHorizontal: 10,
      height: 0
    }
  });

  exports.default = SocialIcon;
});