__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _propTypes = _require(_dependencyMap[0]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _fonts = _require(_dependencyMap[3]);

  var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

  var _colors = _require(_dependencyMap[4]);

  var _colors2 = babelHelpers.interopRequireDefault(_colors);

  var _Text = _require(_dependencyMap[5]);

  var _Text2 = babelHelpers.interopRequireDefault(_Text);

  var _Divider = _require(_dependencyMap[6]);

  var _Divider2 = babelHelpers.interopRequireDefault(_Divider);

  var _normalizeText = _require(_dependencyMap[7]);

  var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

  var _ViewPropTypes = _require(_dependencyMap[8]);

  var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

  var _BackgroundImage = _require(_dependencyMap[9]);

  var _BackgroundImage2 = babelHelpers.interopRequireDefault(_BackgroundImage);

  var Card = function Card(props) {
    var children = props.children,
        flexDirection = props.flexDirection,
        containerStyle = props.containerStyle,
        wrapperStyle = props.wrapperStyle,
        imageWrapperStyle = props.imageWrapperStyle,
        title = props.title,
        titleStyle = props.titleStyle,
        titleNumberOfLines = props.titleNumberOfLines,
        featuredTitle = props.featuredTitle,
        featuredTitleStyle = props.featuredTitleStyle,
        featuredSubtitle = props.featuredSubtitle,
        featuredSubtitleStyle = props.featuredSubtitleStyle,
        dividerStyle = props.dividerStyle,
        image = props.image,
        imageStyle = props.imageStyle,
        fontFamily = props.fontFamily,
        imageProps = props.imageProps,
        attributes = babelHelpers.objectWithoutProperties(props, ["children", "flexDirection", "containerStyle", "wrapperStyle", "imageWrapperStyle", "title", "titleStyle", "titleNumberOfLines", "featuredTitle", "featuredTitleStyle", "featuredSubtitle", "featuredSubtitleStyle", "dividerStyle", "image", "imageStyle", "fontFamily", "imageProps"]);
    return _react2.default.createElement(
      _reactNative.View,
      babelHelpers.extends({}, attributes, {
        style: [styles.container, image && {
          padding: 0
        }, containerStyle && containerStyle]
      }),
      _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.wrapper, wrapperStyle && wrapperStyle, flexDirection && {
            flexDirection: flexDirection
          }]
        },
        title === '' || title && title.length > 0 && _react2.default.createElement(
          _reactNative.View,
          null,
          _react2.default.createElement(
            _Text2.default,
            {
              style: [styles.cardTitle, image && styles.imageCardTitle, titleStyle && titleStyle, fontFamily && {
                fontFamily: fontFamily
              }],
              numberOfLines: titleNumberOfLines
            },
            title
          ),
          !image && _react2.default.createElement(_Divider2.default, {
            style: [styles.divider, dividerStyle && dividerStyle]
          })
        ),
        image && _react2.default.createElement(
          _reactNative.View,
          {
            style: imageWrapperStyle && imageWrapperStyle
          },
          _react2.default.createElement(
            _BackgroundImage2.default,
            babelHelpers.extends({
              resizeMode: "cover",
              style: [{
                width: null,
                height: 150
              }, imageStyle && imageStyle],
              source: image
            }, imageProps),
            (featuredTitle || featuredSubtitle) && _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.overlayContainer
              },
              featuredTitle && _react2.default.createElement(
                _Text2.default,
                {
                  style: [styles.featuredTitle, featuredTitleStyle && featuredTitleStyle]
                },
                featuredTitle
              ),
              featuredSubtitle && _react2.default.createElement(
                _Text2.default,
                {
                  style: [styles.featuredSubtitle, featuredSubtitleStyle && featuredSubtitleStyle]
                },
                featuredSubtitle
              )
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [{
                padding: 10
              }, wrapperStyle && wrapperStyle]
            },
            children
          )
        ),
        !image && children
      )
    );
  };

  Card.propTypes = {
    children: _propTypes2.default.any,
    flexDirection: _propTypes2.default.string,
    containerStyle: _ViewPropTypes2.default.style,
    wrapperStyle: _ViewPropTypes2.default.style,
    overlayStyle: _ViewPropTypes2.default.style,
    title: _propTypes2.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    featuredTitle: _propTypes2.default.string,
    featuredTitleStyle: _Text2.default.propTypes.style,
    featuredSubtitle: _propTypes2.default.string,
    featuredSubtitleStyle: _Text2.default.propTypes.style,
    dividerStyle: _ViewPropTypes2.default.style,
    image: _reactNative.Image.propTypes.source,
    imageStyle: _ViewPropTypes2.default.style,
    imageWrapperStyle: _ViewPropTypes2.default.style,
    fontFamily: _propTypes2.default.string,
    imageProps: _propTypes2.default.object,
    titleNumberOfLines: _propTypes2.default.number
  };

  var styles = _reactNative.StyleSheet.create({
    container: babelHelpers.extends({
      backgroundColor: 'white',
      borderColor: _colors2.default.grey5,
      borderWidth: 1,
      padding: 15,
      margin: 15,
      marginBottom: 0
    }, {
      elevation: 1
    }),
    featuredTitle: babelHelpers.extends({
      fontSize: (0, _normalizeText2.default)(18),
      marginBottom: 8,
      color: 'white'
    }, babelHelpers.extends({}, _fonts2.default.android.black)),
    featuredSubtitle: babelHelpers.extends({
      fontSize: (0, _normalizeText2.default)(13),
      marginBottom: 8,
      color: 'white'
    }, babelHelpers.extends({}, _fonts2.default.android.black)),
    wrapper: {
      backgroundColor: 'transparent'
    },
    divider: {
      marginBottom: 15
    },
    cardTitle: babelHelpers.extends({
      fontSize: (0, _normalizeText2.default)(14)
    }, babelHelpers.extends({}, _fonts2.default.android.black), {
      textAlign: 'center',
      marginBottom: 15,
      color: _colors2.default.grey1
    }),
    imageCardTitle: {
      marginTop: 15
    },
    overlayContainer: {
      flex: 1,
      alignItems: 'center',
      backgroundColor: 'rgba(0, 0, 0, 0.2)',
      alignSelf: 'stretch',
      justifyContent: 'center',
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }
  });

  exports.default = Card;
});