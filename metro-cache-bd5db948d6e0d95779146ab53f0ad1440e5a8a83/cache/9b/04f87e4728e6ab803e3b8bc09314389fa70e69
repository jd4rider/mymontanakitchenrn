__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconButtonComponent;

  var _isString = _require(_dependencyMap[0]);

  var _isString2 = babelHelpers.interopRequireDefault(_isString);

  var _omit = _require(_dependencyMap[1]);

  var _omit2 = babelHelpers.interopRequireDefault(_omit);

  var _pick = _require(_dependencyMap[2]);

  var _pick2 = babelHelpers.interopRequireDefault(_pick);

  var _react = _require(_dependencyMap[3]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[4]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[5]);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      justifyContent: 'flex-start',
      alignItems: 'center',
      padding: 8
    },
    touchable: {
      overflow: 'hidden'
    },
    icon: {
      marginRight: 10
    },
    text: {
      fontWeight: '600',
      backgroundColor: 'transparent'
    }
  });

  var IOS7_BLUE = '#007AFF';

  function createIconButtonComponent(Icon) {
    var _class, _temp;

    return _temp = _class = function (_PureComponent) {
      babelHelpers.inherits(IconButton, _PureComponent);

      function IconButton() {
        babelHelpers.classCallCheck(this, IconButton);
        return babelHelpers.possibleConstructorReturn(this, (IconButton.__proto__ || Object.getPrototypeOf(IconButton)).apply(this, arguments));
      }

      babelHelpers.createClass(IconButton, [{
        key: "render",
        value: function render() {
          var _props = this.props,
              style = _props.style,
              iconStyle = _props.iconStyle,
              children = _props.children,
              restProps = babelHelpers.objectWithoutProperties(_props, ["style", "iconStyle", "children"]);
          var iconProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.Text.propTypes), 'style', 'name', 'size', 'color');
          var touchableProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.TouchableHighlight.propTypes));
          var props = (0, _omit2.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
          iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
          var colorStyle = (0, _pick2.default)(this.props, 'color');
          var blockStyle = (0, _pick2.default)(this.props, 'backgroundColor', 'borderRadius');
          return _react2.default.createElement(
            _reactNative.TouchableHighlight,
            babelHelpers.extends({
              style: [styles.touchable, blockStyle]
            }, touchableProps),
            _react2.default.createElement(
              _reactNative.View,
              babelHelpers.extends({
                style: [styles.container, blockStyle, style]
              }, props),
              _react2.default.createElement(Icon, iconProps),
              (0, _isString2.default)(children) ? _react2.default.createElement(
                _reactNative.Text,
                {
                  style: [styles.text, colorStyle]
                },
                children
              ) : children
            )
          );
        }
      }]);
      return IconButton;
    }(_react.PureComponent), _class.propTypes = {
      backgroundColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
      borderRadius: _propTypes2.default.number,
      color: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
      size: _propTypes2.default.number,
      iconStyle: _propTypes2.default.any,
      style: _propTypes2.default.any,
      children: _propTypes2.default.node
    }, _class.defaultProps = {
      backgroundColor: IOS7_BLUE,
      borderRadius: 5,
      color: 'white',
      size: 20
    }, _temp;
  }
});