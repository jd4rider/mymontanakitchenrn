__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _class, _temp2;

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[1]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _expoCore = _require(_dependencyMap[2]);

  var _reactNative = _require(_dependencyMap[3]);

  var AdMobBanner = (_temp2 = _class = function (_React$Component) {
    babelHelpers.inherits(AdMobBanner, _React$Component);

    function AdMobBanner() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, AdMobBanner);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AdMobBanner.__proto__ || Object.getPrototypeOf(AdMobBanner)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        style: {}
      }, _this._handleSizeChange = function (_ref2) {
        var nativeEvent = _ref2.nativeEvent;
        var height = nativeEvent.height,
            width = nativeEvent.width;

        _this.setState({
          style: {
            width: width,
            height: height
          }
        });
      }, _this._handleDidFailToReceiveAdWithError = function (_ref3) {
        var nativeEvent = _ref3.nativeEvent;
        return _this.props.onDidFailToReceiveAdWithError && _this.props.onDidFailToReceiveAdWithError(nativeEvent.error);
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(AdMobBanner, [{
      key: "render",
      value: function render() {
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: this.props.style
          },
          _react2.default.createElement(ExpoBannerView, {
            style: this.state.style,
            adUnitID: this.props.adUnitID,
            bannerSize: this.props.bannerSize,
            testDeviceID: this.props.testDeviceID,
            onSizeChange: this._handleSizeChange,
            onAdViewDidReceiveAd: this.props.onAdViewDidReceiveAd,
            onDidFailToReceiveAdWithError: this._handleDidFailToReceiveAdWithError,
            onAdViewWillPresentScreen: this.props.onAdViewWillPresentScreen,
            onAdViewWillDismissScreen: this.props.onAdViewWillDismissScreen,
            onAdViewDidDismissScreen: this.props.onAdViewDidDismissScreen,
            onAdViewWillLeaveApplication: this.props.onAdViewWillLeaveApplication
          })
        );
      }
    }]);
    return AdMobBanner;
  }(_react2.default.Component), _class.propTypes = babelHelpers.extends({
    bannerSize: _propTypes2.default.oneOf(['banner', 'largeBanner', 'mediumRectangle', 'fullBanner', 'leaderboard', 'smartBannerPortrait', 'smartBannerLandscape']),
    adUnitID: _propTypes2.default.string,
    testDeviceID: _propTypes2.default.string,
    onAdViewDidReceiveAd: _propTypes2.default.func,
    onDidFailToReceiveAdWithError: _propTypes2.default.func,
    onAdViewWillPresentScreen: _propTypes2.default.func,
    onAdViewWillDismissScreen: _propTypes2.default.func,
    onAdViewDidDismissScreen: _propTypes2.default.func,
    onAdViewWillLeaveApplication: _propTypes2.default.func
  }, _reactNative.ViewPropTypes), _class.defaultProps = {
    bannerSize: 'smartBannerPortrait'
  }, _temp2);
  exports.default = AdMobBanner;
  var ExpoBannerView = (0, _expoCore.requireNativeViewManager)('ExpoAdsAdMobBannerView', AdMobBanner);
});