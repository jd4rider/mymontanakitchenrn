__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _class, _temp;

  var React = _require(_dependencyMap[0]);

  var StyleSheet = _require(_dependencyMap[1]);

  var Text = _require(_dependencyMap[2]);

  var View = _require(_dependencyMap[3]);

  var DummyTouchableNativeFeedback = (_temp = _class = function (_React$Component) {
    babelHelpers.inherits(DummyTouchableNativeFeedback, _React$Component);

    function DummyTouchableNativeFeedback() {
      babelHelpers.classCallCheck(this, DummyTouchableNativeFeedback);
      return babelHelpers.possibleConstructorReturn(this, (DummyTouchableNativeFeedback.__proto__ || Object.getPrototypeOf(DummyTouchableNativeFeedback)).apply(this, arguments));
    }

    babelHelpers.createClass(DummyTouchableNativeFeedback, [{
      key: "render",
      value: function render() {
        return React.createElement(
          View,
          {
            style: [styles.container, this.props.style]
          },
          React.createElement(
            Text,
            {
              style: styles.info
            },
            "TouchableNativeFeedback is not supported on this platform!"
          )
        );
      }
    }]);
    return DummyTouchableNativeFeedback;
  }(React.Component), _class.SelectableBackground = function () {
    return {};
  }, _class.SelectableBackgroundBorderless = function () {
    return {};
  }, _class.Ripple = function () {
    return {};
  }, _class.canUseNativeForeground = function () {
    return false;
  }, _temp);
  var styles = StyleSheet.create({
    container: {
      height: 100,
      width: 300,
      backgroundColor: '#ffbcbc',
      borderWidth: 1,
      borderColor: 'red',
      alignItems: 'center',
      justifyContent: 'center',
      margin: 10
    },
    info: {
      color: '#333333',
      margin: 20
    }
  });
  module.exports = DummyTouchableNativeFeedback;
});