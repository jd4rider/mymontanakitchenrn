__d(function (global, _require, module, exports, _dependencyMap) {
  var castPath = _require(_dependencyMap[0]),
      isArguments = _require(_dependencyMap[1]),
      isArray = _require(_dependencyMap[2]),
      isIndex = _require(_dependencyMap[3]),
      isLength = _require(_dependencyMap[4]),
      toKey = _require(_dependencyMap[5]);

  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);
    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = toKey(path[index]);

      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }

      object = object[key];
    }

    if (result || ++index != length) {
      return result;
    }

    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
  }

  module.exports = hasPath;
});