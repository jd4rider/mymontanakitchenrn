__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = gestureHandlerRootHOC;

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _hoistNonReactStatics = _require(_dependencyMap[2]);

  var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

  var iface = {
    name: 'GestureHandlerRootView',
    propTypes: babelHelpers.extends({}, _reactNative.ViewPropTypes)
  };
  var GestureHandlerRootView = (0, _reactNative.requireNativeComponent)('GestureHandlerRootView', iface);

  function gestureHandlerRootHOC(Component) {
    var containerStyles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    var Wrapper = function (_React$Component) {
      babelHelpers.inherits(Wrapper, _React$Component);

      function Wrapper() {
        babelHelpers.classCallCheck(this, Wrapper);
        return babelHelpers.possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).apply(this, arguments));
      }

      babelHelpers.createClass(Wrapper, [{
        key: "render",
        value: function render() {
          return _react2.default.createElement(
            GestureHandlerRootView,
            {
              style: [styles.container, containerStyles]
            },
            _react2.default.createElement(Component, this.props)
          );
        }
      }]);
      return Wrapper;
    }(_react2.default.Component);

    (0, _hoistNonReactStatics2.default)(Wrapper, Component);
    return Wrapper;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });
});